services:
  customer-service:
    build:
      dockerfile: customer-service/Dockerfile
      context: .
    ports:
      - "8081:8081"
    depends_on:
      customer-db:
        condition: service_healthy

  payment-service:
    build:
      dockerfile: payment-service/Dockerfile
      context: .
    ports:
      - "8085:8085"
    depends_on:
      payment-db:
        condition: service_healthy

  api-gateway:
    build:
      dockerfile: api-gateway/Dockerfile
      context: .
    environment:
      -
        SPRING_APPLICATION_JSON={"customerService":{"hostname":"customer-service","port":8081}}
      - PAYMENT_SERVICE_HOSTNAME=payment-service
      - PAYMENT_SERVICE_PORT=8082
    ports:
      - "8080:8080"
    depends_on:
      - customer-service
      - payment-service

  customer-db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: poss
      POSTGRES_PASSWORD: poss
      POSTGRES_DB: poss_db
    expose:
       - 5432
    ports:
      - "5433:5432"
    volumes:
      - ./.db/customer-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -d poss_db -U poss
      interval: 3s
      retries: 4
      start_period: 10s
      timeout: 1s

  payment-db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: poss
      POSTGRES_PASSWORD: poss
      POSTGRES_DB: poss_db
    expose:
      - 5432
    ports:
      - "5435:5432"
    volumes:
      - ./.db/payment-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -d poss_db -U poss
      interval: 3s
      retries: 4
      start_period: 10s
      timeout: 1s
